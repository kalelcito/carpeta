<?php

/**
 * Basecomite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_comite
 * @property integer $id_unidad
 * @property string $nombre_comite
 * @property integer $id_usuario_presidente
 * @property timestamp $creado
 * @property timestamp $actualizado
 * @property decimal $calificacion
 * @property boolean $minimos
 * @property unidad $unidad
 * @property usuario $Usuario
 * @property Doctrine_Collection $Usucom
 * @property Doctrine_Collection $programa
 * @property Doctrine_Collection $Usuariocom
 * 
 * @method integer             getIdComite()              Returns the current record's "id_comite" value
 * @method integer             getIdUnidad()              Returns the current record's "id_unidad" value
 * @method string              getNombreComite()          Returns the current record's "nombre_comite" value
 * @method integer             getIdUsuarioPresidente()   Returns the current record's "id_usuario_presidente" value
 * @method timestamp           getCreado()                Returns the current record's "creado" value
 * @method timestamp           getActualizado()           Returns the current record's "actualizado" value
 * @method decimal             getCalificacion()          Returns the current record's "calificacion" value
 * @method boolean             getMinimos()               Returns the current record's "minimos" value
 * @method unidad              getUnidad()                Returns the current record's "unidad" value
 * @method usuario             getUsuario()               Returns the current record's "Usuario" value
 * @method Doctrine_Collection getUsucom()                Returns the current record's "Usucom" collection
 * @method Doctrine_Collection getPrograma()              Returns the current record's "programa" collection
 * @method Doctrine_Collection getUsuariocom()            Returns the current record's "Usuariocom" collection
 * @method comite              setIdComite()              Sets the current record's "id_comite" value
 * @method comite              setIdUnidad()              Sets the current record's "id_unidad" value
 * @method comite              setNombreComite()          Sets the current record's "nombre_comite" value
 * @method comite              setIdUsuarioPresidente()   Sets the current record's "id_usuario_presidente" value
 * @method comite              setCreado()                Sets the current record's "creado" value
 * @method comite              setActualizado()           Sets the current record's "actualizado" value
 * @method comite              setCalificacion()          Sets the current record's "calificacion" value
 * @method comite              setMinimos()               Sets the current record's "minimos" value
 * @method comite              setUnidad()                Sets the current record's "unidad" value
 * @method comite              setUsuario()               Sets the current record's "Usuario" value
 * @method comite              setUsucom()                Sets the current record's "Usucom" collection
 * @method comite              setPrograma()              Sets the current record's "programa" collection
 * @method comite              setUsuariocom()            Sets the current record's "Usuariocom" collection
 * 
 * @package    carpetavirtual
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecomite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comite');
        $this->hasColumn('id_comite', 'integer', 11, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 11,
             ));
        $this->hasColumn('id_unidad', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('nombre_comite', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('id_usuario_presidente', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('creado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('actualizado', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('calificacion', 'decimal', 3, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 3,
             ));
        $this->hasColumn('minimos', 'boolean', null, array(
             'default' => 0,
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('unidad', array(
             'local' => 'id_unidad',
             'foreign' => 'id_unidad',
             'onDelete' => 'CASCADE'));

        $this->hasOne('usuario as Usuario', array(
             'local' => 'id_usuario_presidente',
             'foreign' => 'id_usuario'));

        $this->hasMany('usuario as Usucom', array(
             'refClass' => 'comite_usuarios',
             'local' => 'id_comite',
             'foreign' => 'id_usuario'));

        $this->hasMany('programa', array(
             'local' => 'id_comite',
             'foreign' => 'id_comite'));

        $this->hasMany('usuario as Usuariocom', array(
             'local' => 'id_comite',
             'foreign' => 'id_comite'));

        /*$timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'alias' => 'creado',
              'disabled' => false,
              'format' => 'creado',
             ),
             'updated' => 
             array(
              'alias' => 'actualizado',
              'disabled' => false,
              'name' => 'actualizado',
             ),
             ));*/
        //$this->actAs($timestampable0);
    }
}